#Programmer: BYRON HOGAN
#ZID: z1825194
#Assignment: 5
#Due date: 11-17-17
#Purpose: To maintain a small database

#shebang
#!usr/bin/bash

#Error handling for if the wrong commands were entered
if [[ $2 != "add" && $2 != "show" && $2 != "delete" && $2 != "new" ]];then
	echo "Must enter one of the following: new, add, show, delete"
	exit 1
fi

##############################################################
#          The show is coded below
###############################################################

if [ $2 = "show" ];then
	if [ $3 = "all" ];then              #the display all code follows
		cat $1	
	elif [ $3 = "single" ];then            #the display a single line code follows
		sed -n -e '1 p' $1
		sed -n -e ''$(($4+1))' p' $1
	else #the display in the range code follows
		if [[ $4 -ge $5 ]];then             #error handling to make sure the range is appropriate
			echo "The second number must be bigger"
			exit 1
		fi
		sed -n -e '1 p' $1
		count=$(($4+1))
		while [ $count -le $(($5+1)) ]               #loops through the range,printing each line
		do
			sed -n -e ''$count' p' $1
			count=$(($count+1))
		done		
	fi
fi

###############################################################
#                   The delete code follows
###############################################################


if [ $2 = "delete" ];then
	if [ $3 = "all" ];then                          #the delete all code follows,does not delete the title
		sed -n -i '1p' $1 
 	elif [[ $3 = "single" ]];then                    #the delete single code follows
		sed -i ""$(($4))"d" $1 
		echo "is it in single"
	else #range
                if [[ $4 -ge $5 ]];then                    #error handling to make sure the range is appropriate
                        echo "The second number must be bigger"
                        exit 1
                fi
		count=0
		while [ $count -lt $5 ]                #loops through the range, deletes the lines specified
		do
			sed -i ""$(($4))"d" $1 
			count=$(($count+1))             #keeps count of the items deleted
		done
		echo -n "Successfully deleted "
		echo -n "$(($count))"
		echo " items form the database."
	fi	
fi 

###############################################################
#                    The add code follows
###############################################################

if [ $2 = "add" ];then
	if [[ $3 = "" || $4 = "" || $5 = "" || $6 = "" ]];then           #error handling to make sure that four parameters were entered
		echo "Must have four parameters in the order (make,model,year,color)"
		exit 1
	fi
	if [[ $5 -le 1869 || $5 -ge 2021 ]];then                 #error handling to make sure the year is within an appropriate range 
		echo "The year must be betweeen 1870 and 2020"
		exit 1
	fi
	echo $3 $4 $5 $6 >> $1
	echo "successfully added a record to the database"
fi

################################################################
#                      The new code follows
################################################################

if [ $2 = "new" ];then
if [ ! -f "$1" ];then                          #error handling, will only allow a file that did not exist to be created
touch "$1"
	if [ $# -lt 3 ];then           #the case were something is created without a title being specified
		echo "Automobile Database" >> "$1"
		echo "New database created."
	else
		echo $3 >> "$1"            #the case were the title is specified
		echo "New database created."
	fi
exit 1
fi
if [ -f "$1" ];then                            #error handling, does not allow a file to be created fi it already exists
	echo "File already exists"
	exit 1
fi
fi



